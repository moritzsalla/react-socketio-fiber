{"version":3,"sources":["Particle.js","Scene.js","App.js","index.js"],"names":["Particle","props","mesh","useRef","useFrame","current","rotation","x","y","ref","scale","r","Math","random","randScale","attach","args","color","extend","OrbitControls","GlobalStyle","createGlobalStyle","HUD","styled","span","CameraController","useThree","camera","gl","useEffect","controls","domElement","minDistance","maxDistance","dispose","Scene","state","particles","this","setState","users","floor","pixelRatio","window","devicePixelRatio","position","Array","map","e","i","key","randCoord","randColor","React","Component","App","response","endpoint","socketIOClient","on","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAuBeA,EApBE,SAACC,GAEhB,IAAMC,EAAOC,mBAGbC,aAAS,kBAAOF,EAAKG,QAAQC,SAASC,EAAIL,EAAKG,QAAQC,SAASE,GAAK,OAOrE,OACE,0CAAUP,EAAV,CAAiBQ,IAAKP,EAAMQ,MANZ,WAChB,IAAIC,EAAoB,EAAhBC,KAAKC,SACb,MAAO,CAACF,EAAGA,EAAGA,GAIqBG,KACjC,0CAAsBC,OAAO,WAAWC,KAAM,CAAC,GAAK,GAAI,MACxD,0CAAsBD,OAAO,WAAWE,MAAK,cAAShB,EAAMgB,MAAf,S,oeCZnDC,YAAO,CAAEC,oBAET,IAAMC,EAAcC,YAAH,KAiBXC,EAAMC,IAAOC,KAAV,KASHC,EAAmB,WAAO,IAAD,EACNC,cAAfC,EADqB,EACrBA,OAAQC,EADa,EACbA,GAWhB,OAVAC,qBAAU,WACR,IAAMC,EAAW,IAAIX,IAAcQ,EAAQC,EAAGG,YAK9C,OAHAD,EAASE,YAAc,EACvBF,EAASG,YAAc,GAEhB,WACLH,EAASI,aAEV,CAACP,EAAQC,IACL,MAwDMO,E,kDApDb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAW,GAHD,E,sEAOYpC,GACxBqC,KAAKC,SAAS,CAAEF,UAAWpC,EAAMuC,U,kCAOjC,MAAO,CAHiB,EAAhB5B,KAAKC,SAAe,EACJ,EAAhBD,KAAKC,SAAe,EACJ,EAAhBD,KAAKC,SAAe,K,kCAQ5B,MAAO,CAHCD,KAAK6B,MAAsB,IAAhB7B,KAAKC,UAChBD,KAAK6B,MAAsB,IAAhB7B,KAAKC,UAChBD,KAAK6B,MAAsB,IAAhB7B,KAAKC,a,+BAIhB,IAAD,OACP,OACE,oCACE,kBAACO,EAAD,MACA,kBAACE,EAAD,KAAMgB,KAAKF,MAAMC,UAAjB,iBAEA,kBAAC,IAAD,CACEK,WAAYC,OAAOC,iBAAmBD,OAAOC,iBAAmB,GAEhE,kBAAC,EAAD,MAEA,uCACA,gCAAYC,SAAU,CAAC,GAAI,GAAI,MAE9B,YAAIC,MAAMR,KAAKF,MAAMC,YAAYU,KAAI,SAACC,EAAGC,GAAJ,OACpC,kBAAC,EAAD,CACEC,IAAKD,EACLJ,SAAU,EAAKM,YACflC,MAAO,EAAKmC,uB,GA5CNC,IAAMC,WCrBXC,E,kDAvBb,aAAe,IAAD,8BACZ,gBACKnB,MAAQ,CACXoB,UAAU,EACVC,SAAU,yBAJA,E,gEAQO,IAAD,OACVA,EAAanB,KAAKF,MAAlBqB,SAEOC,IAAeD,GAEvBE,GAAG,SAAS,SAACC,GAAD,OAAU,EAAKrB,SAAS,CAAEiB,SAAUI,S,+BAG/C,IACAJ,EAAalB,KAAKF,MAAlBoB,SAER,OAAO,kBAAC,EAAD,CAAOhB,MAAOgB,Q,GApBPH,IAAMC,WCAxBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6f25b131.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nconst Particle = (props) => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const randScale = () => {\n    let r = Math.random() * 3;\n    return [r, r, r];\n  };\n\n  return (\n    <mesh {...props} ref={mesh} scale={randScale()}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.2, 32, 32]} />\n      <meshStandardMaterial attach=\"material\" color={`rgb(${props.color})`} />\n    </mesh>\n  );\n};\n\nexport default Particle;\n","import React, { useEffect } from 'react';\nimport { Canvas, extend, useThree } from 'react-three-fiber';\nimport Particle from './Particle';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    min-height: 100vh;\n    min-width: 100vw;\n    margin: 0;\n    padding: 0;\n  }\n\n  canvas {\n      height: 100vh;\n      width: 100vw;\n      position: fixed:\n      top: 0;\n      left: 0;\n  }\n`;\n\nconst HUD = styled.span`\n  position: fixed;\n  top: 0;\n  left: 0;\n  margin: 1rem;\n  font-family: sans-serif;\n  font-size: 3rem;\n`;\n\nconst CameraController = () => {\n  const { camera, gl } = useThree();\n  useEffect(() => {\n    const controls = new OrbitControls(camera, gl.domElement);\n\n    controls.minDistance = 3;\n    controls.maxDistance = 20;\n\n    return () => {\n      controls.dispose();\n    };\n  }, [camera, gl]);\n  return null;\n};\n\nclass Scene extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      particles: 0,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({ particles: props.users });\n  }\n\n  randCoord() {\n    let x = Math.random() * 4 - 2;\n    let y = Math.random() * 4 - 2;\n    let z = Math.random() * 4 - 2;\n    return [x, y, z];\n  }\n\n  randColor() {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return [r, g, b];\n  }\n\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <HUD>{this.state.particles} Active Users</HUD>\n\n        <Canvas\n          pixelRatio={window.devicePixelRatio ? window.devicePixelRatio : 1}\n        >\n          <CameraController />\n\n          <ambientLight />\n          <pointLight position={[10, 10, 10]} />\n\n          {[...Array(this.state.particles)].map((e, i) => (\n            <Particle\n              key={i}\n              position={this.randCoord()}\n              color={this.randColor()}\n            />\n          ))}\n        </Canvas>\n      </>\n    );\n  }\n}\n\nexport default Scene;\n","import React from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Scene from './Scene';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      response: false,\n      endpoint: 'http://127.0.0.1:4001',\n    };\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n\n    const socket = socketIOClient(endpoint);\n\n    socket.on('event', (data) => this.setState({ response: data }));\n  }\n\n  render() {\n    const { response } = this.state;\n\n    return <Scene users={response} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/Users/moritzsalla/Documents/GitHub/react-socketio-fiber/app/src/Particle.js\";\nimport React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nfunction Particle(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Rotate mesh every frame, this is outside of React without overhead\n\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh,\n    scale: [Math.random() * 1, Math.random() * 1, Math.random() * 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.2, 6, 6],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: `rgb(${props.color})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Particle;","map":{"version":3,"sources":["/Users/moritzsalla/Documents/GitHub/react-socketio-fiber/app/src/Particle.js"],"names":["React","useRef","useFrame","Particle","props","mesh","current","rotation","x","y","Math","random","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,QAAMC,IAAI,GAAGJ,MAAM,EAAnB,CAFuB,CAIvB;;AACAC,EAAAA,QAAQ,CAAC,MAAOG,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,GAA0BH,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA7D,CAAR;AAEA,sBACE,8CACML,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,KAAK,EAAE,CAACK,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoBD,IAAI,CAACC,MAAL,KAAgB,CAApC,EAAuCD,IAAI,CAACC,MAAL,KAAgB,CAAvD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKE;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAG,OAAMP,KAAK,CAACQ,KAAM,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nfunction Particle(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={[Math.random() * 1, Math.random() * 1, Math.random() * 1]}\n    >\n      <sphereBufferGeometry attach=\"geometry\" args={[0.2, 6, 6]} />\n      <meshStandardMaterial attach=\"material\" color={`rgb(${props.color})`} />\n    </mesh>\n  );\n}\n\nexport default Particle;\n"]},"metadata":{},"sourceType":"module"}
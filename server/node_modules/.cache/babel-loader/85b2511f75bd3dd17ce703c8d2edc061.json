{"ast":null,"code":"import React,{useRef}from'react';import{useFrame}from'react-three-fiber';var Particle=function Particle(props){// This reference will give us direct access to the mesh\nvar mesh=useRef();// Rotate mesh every frame, this is outside of React without overhead\nuseFrame(function(){return mesh.current.rotation.x=mesh.current.rotation.y+=0.01;});var randScale=function randScale(){var r=Math.random()*3;return[r,r,r];};return/*#__PURE__*/React.createElement(\"mesh\",Object.assign({},props,{ref:mesh,scale:randScale()}),/*#__PURE__*/React.createElement(\"sphereBufferGeometry\",{attach:\"geometry\",args:[0.2,32,32]}),/*#__PURE__*/React.createElement(\"meshStandardMaterial\",{attach:\"material\",color:\"rgb(\".concat(props.color,\")\")}));};export default Particle;","map":{"version":3,"sources":["/Users/moritzsalla/Documents/GitHub/react-socketio-fiber/src/Particle.js"],"names":["React","useRef","useFrame","Particle","props","mesh","current","rotation","x","y","randScale","r","Math","random","color"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B;AACA,GAAMC,CAAAA,IAAI,CAAGJ,MAAM,EAAnB,CAEA;AACAC,QAAQ,CAAC,iBAAOG,CAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,CAA0BH,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,EAA2B,IAA5D,EAAD,CAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIC,CAAAA,CAAC,CAAGC,IAAI,CAACC,MAAL,GAAgB,CAAxB,CACA,MAAO,CAACF,CAAD,CAAIA,CAAJ,CAAOA,CAAP,CAAP,CACD,CAHD,CAKA,mBACE,4CAAUP,KAAV,EAAiB,GAAG,CAAEC,IAAtB,CAA4B,KAAK,CAAEK,SAAS,EAA5C,gBACE,4CAAsB,MAAM,CAAC,UAA7B,CAAwC,IAAI,CAAE,CAAC,GAAD,CAAM,EAAN,CAAU,EAAV,CAA9C,EADF,cAEE,4CAAsB,MAAM,CAAC,UAA7B,CAAwC,KAAK,eAASN,KAAK,CAACU,KAAf,KAA7C,EAFF,CADF,CAMD,CAlBD,CAoBA,cAAeX,CAAAA,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nconst Particle = (props) => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const randScale = () => {\n    let r = Math.random() * 3;\n    return [r, r, r];\n  };\n\n  return (\n    <mesh {...props} ref={mesh} scale={randScale()}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.2, 32, 32]} />\n      <meshStandardMaterial attach=\"material\" color={`rgb(${props.color})`} />\n    </mesh>\n  );\n};\n\nexport default Particle;\n"]},"metadata":{},"sourceType":"module"}